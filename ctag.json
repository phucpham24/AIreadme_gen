[
    {
        "_type": "ptag",
        "name": "JSON_OUTPUT_VERSION",
        "path": "1.0",
        "pattern": "in development"
    },
    {
        "_type": "ptag",
        "name": "TAG_EXTRA_DESCRIPTION",
        "path": "anonymous",
        "pattern": "Include tags for non-named objects like lambda"
    },
    {
        "_type": "ptag",
        "name": "TAG_EXTRA_DESCRIPTION",
        "path": "fileScope",
        "pattern": "Include tags of file scope"
    },
    {
        "_type": "ptag",
        "name": "TAG_EXTRA_DESCRIPTION",
        "path": "pseudo",
        "pattern": "Include pseudo tags"
    },
    {
        "_type": "ptag",
        "name": "TAG_EXTRA_DESCRIPTION",
        "path": "qualified",
        "pattern": "Include an extra class-qualified tag entry for each tag"
    },
    {
        "_type": "ptag",
        "name": "TAG_EXTRA_DESCRIPTION",
        "path": "subparser",
        "pattern": "Include tags generated by subparsers"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "parserName": "Python",
        "path": "nameref",
        "pattern": "the original name for the tag"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "path": "epoch",
        "pattern": "the last modified time of the input file (only for F/file kind tag)"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "path": "file",
        "pattern": "File-restricted scoping"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "path": "input",
        "pattern": "input file"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "path": "language",
        "pattern": "Language of input file containing tag"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "path": "name",
        "pattern": "tag name"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "path": "pattern",
        "pattern": "pattern"
    },
    {
        "_type": "ptag",
        "name": "TAG_FIELD_DESCRIPTION",
        "path": "typeref",
        "pattern": "Type and name of a variable or typedef"
    },
    {
        "_type": "ptag",
        "name": "TAG_FILE_SORTED",
        "path": "1",
        "pattern": "0=unsorted, 1=sorted, 2=foldcase"
    },
    {
        "_type": "ptag",
        "name": "TAG_KIND_DESCRIPTION",
        "parserName": "Python",
        "path": "I,namespace",
        "pattern": "name referring a module defined in other file"
    },
    {
        "_type": "ptag",
        "name": "TAG_KIND_DESCRIPTION",
        "parserName": "Python",
        "path": "Y,unknown",
        "pattern": "name referring a class/variable/function/module defined in other module"
    },
    {
        "_type": "ptag",
        "name": "TAG_KIND_DESCRIPTION",
        "parserName": "Python",
        "path": "c,class",
        "pattern": "classes"
    },
    {
        "_type": "ptag",
        "name": "TAG_KIND_DESCRIPTION",
        "parserName": "Python",
        "path": "f,function",
        "pattern": "functions"
    },
    {
        "_type": "ptag",
        "name": "TAG_KIND_DESCRIPTION",
        "parserName": "Python",
        "path": "i,module",
        "pattern": "modules"
    },
    {
        "_type": "ptag",
        "name": "TAG_KIND_DESCRIPTION",
        "parserName": "Python",
        "path": "m,member",
        "pattern": "class members"
    },
    {
        "_type": "ptag",
        "name": "TAG_KIND_DESCRIPTION",
        "parserName": "Python",
        "path": "v,variable",
        "pattern": "variables"
    },
    {
        "_type": "ptag",
        "name": "TAG_OUTPUT_EXCMD",
        "path": "mixed",
        "pattern": "number, pattern, mixed, or combineV2"
    },
    {
        "_type": "ptag",
        "name": "TAG_OUTPUT_FILESEP",
        "path": "slash",
        "pattern": "slash or backslash"
    },
    {
        "_type": "ptag",
        "name": "TAG_OUTPUT_VERSION",
        "path": "0.0",
        "pattern": "current.age"
    },
    {
        "_type": "ptag",
        "name": "TAG_PARSER_VERSION",
        "parserName": "Python",
        "path": "0.0",
        "pattern": "current.age"
    },
    {
        "_type": "ptag",
        "name": "TAG_PATTERN_LENGTH_LIMIT",
        "path": "96",
        "pattern": "0 for no limit"
    },
    {
        "_type": "ptag",
        "name": "TAG_PROC_CWD",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/",
        "pattern": ""
    },
    {
        "_type": "ptag",
        "name": "TAG_PROGRAM_AUTHOR",
        "path": "Universal Ctags Team",
        "pattern": ""
    },
    {
        "_type": "ptag",
        "name": "TAG_PROGRAM_NAME",
        "path": "Universal Ctags",
        "pattern": "Derived from Exuberant Ctags"
    },
    {
        "_type": "ptag",
        "name": "TAG_PROGRAM_URL",
        "path": "https://ctags.io/",
        "pattern": "official site"
    },
    {
        "_type": "ptag",
        "name": "TAG_PROGRAM_VERSION",
        "path": "6.0.0",
        "pattern": "d104ee5b"
    },
    {
        "_type": "ptag",
        "name": "TAG_ROLE_DESCRIPTION",
        "parserName": "Python",
        "kindName": "module",
        "path": "imported",
        "pattern": "imported modules"
    },
    {
        "_type": "ptag",
        "name": "TAG_ROLE_DESCRIPTION",
        "parserName": "Python",
        "kindName": "module",
        "path": "indirectlyImported",
        "pattern": "module imported in alternative name"
    },
    {
        "_type": "ptag",
        "name": "TAG_ROLE_DESCRIPTION",
        "parserName": "Python",
        "kindName": "module",
        "path": "namespace",
        "pattern": "namespace from where classes/variables/functions are imported"
    },
    {
        "_type": "ptag",
        "name": "TAG_ROLE_DESCRIPTION",
        "parserName": "Python",
        "kindName": "unknown",
        "path": "imported",
        "pattern": "imported from the other module"
    },
    {
        "_type": "ptag",
        "name": "TAG_ROLE_DESCRIPTION",
        "parserName": "Python",
        "kindName": "unknown",
        "path": "indirectlyImported",
        "pattern": "classes/variables/functions/modules imported in alternative name"
    },
    {
        "_type": "tag",
        "name": "CallHierarchyVisitor",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^class CallHierarchyVisitor(ast.NodeVisitor):$/",
        "language": "Python",
        "kind": "class"
    },
    {
        "_type": "tag",
        "name": "CallHierarchyVisitor.__init__",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^    def __init__(self):$/",
        "language": "Python",
        "kind": "member",
        "scope": "CallHierarchyVisitor",
        "scopeKind": "class"
    },
    {
        "_type": "tag",
        "name": "CallHierarchyVisitor.visit_Call",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^    def visit_Call(self, node):$/",
        "language": "Python",
        "kind": "member",
        "scope": "CallHierarchyVisitor",
        "scopeKind": "class"
    },
    {
        "_type": "tag",
        "name": "CallHierarchyVisitor.visit_FunctionDef",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^    def visit_FunctionDef(self, node):$/",
        "language": "Python",
        "kind": "member",
        "scope": "CallHierarchyVisitor",
        "scopeKind": "class"
    },
    {
        "_type": "tag",
        "name": "GREEN",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/config.py",
        "pattern": "/^GREEN = \"\\\\033[32m\"$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "OPENAI_API_KEY",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/main.py",
        "pattern": "/^OPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "QuestionContext",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/questions.py",
        "pattern": "/^class QuestionContext:$/",
        "language": "Python",
        "kind": "class"
    },
    {
        "_type": "tag",
        "name": "QuestionContext.__init__",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/questions.py",
        "pattern": "/^    def __init__(self, index, documents, llm_chain, model_name, repo_name, github_url, conversat/",
        "language": "Python",
        "kind": "member",
        "scope": "QuestionContext",
        "scopeKind": "class"
    },
    {
        "_type": "tag",
        "name": "RESET_COLOR",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/config.py",
        "pattern": "/^RESET_COLOR = \"\\\\033[0m\"$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "WHITE",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/config.py",
        "pattern": "/^WHITE = \"\\\\033[37m\"$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "__init__",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^    def __init__(self):$/",
        "language": "Python",
        "kind": "member",
        "scope": "CallHierarchyVisitor",
        "scopeKind": "class"
    },
    {
        "_type": "tag",
        "name": "__init__",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/questions.py",
        "pattern": "/^    def __init__(self, index, documents, llm_chain, model_name, repo_name, github_url, conversat/",
        "language": "Python",
        "kind": "member",
        "scope": "QuestionContext",
        "scopeKind": "class"
    },
    {
        "_type": "tag",
        "name": "add_docstring_to_function",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/add_comment_to_function.py",
        "pattern": "/^def add_docstring_to_function(file_path, function_name, docstring):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "add_docstring_to_function",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/test_addcomment.py",
        "pattern": "/^def add_docstring_to_function(file_path, function_name, docstring):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "ask_question",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/questions.py",
        "pattern": "/^def ask_question(question, context: QuestionContext):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "build_hierarchy",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^def build_hierarchy(node):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "clean_and_tokenize",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/utils.py",
        "pattern": "/^def clean_and_tokenize(text):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "clone_github_repo",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/file_processing.py",
        "pattern": "/^def clone_github_repo(github_url, local_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "config",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgraph_pnggen.py",
        "pattern": "/^    config = Config(max_depth=10)  # Set the maximum depth for the call graph$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "ctags_file_path",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/add_comment_to_function.py",
        "pattern": "/^ctags_file_path = '\\/home\\/phucsaiyan\\/Documents\\/stage\\/clonechatgpt\\/tags'  # Update with the /",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "data",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/jsonreader.py",
        "pattern": "/^        data = json.load(json_file)$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "docstring_to_add",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/add_comment_to_function.py",
        "pattern": "/^docstring_to_add = 'clone test'$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "extract_function_names_from_json",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/extract_info.py",
        "pattern": "/^def extract_function_names_from_json(json_file_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "extract_functions_from_ctags",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/test_addcomment.py",
        "pattern": "/^def extract_functions_from_ctags(ctags_file):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "file_path",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/add_comment_to_function.py",
        "pattern": "/^            file_path = parts[1]$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "file_path",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/jsonreader.py",
        "pattern": "/^file_path = '\\/home\\/phucsaiyan\\/Documents\\/stage\\/clonechatgpt\\/output.json'$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "folder_path",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/removedocstring.py",
        "pattern": "/^folder_path = '\\/home\\/phucsaiyan\\/Documents\\/stage\\/test_addcomment2\\/'$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "format_documents",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/utils.py",
        "pattern": "/^def format_documents(documents):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "format_user_question",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/utils.py",
        "pattern": "/^def format_user_question(question):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "function_to_search",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/add_comment_to_function.py",
        "pattern": "/^function_to_search = 'clone_github_repo'  # Replace with the name of the function you want to fi/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "generate_call_hierarchy",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^def generate_call_hierarchy(input_folder, output_file):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "generate_ctags_and_convert",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/tag2json.py",
        "pattern": "/^def generate_ctags_and_convert(folder_path, output_path, json_file_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "generate_text_with_splitter",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/test_addcomment.py",
        "pattern": "/^def generate_text_with_splitter(prompt):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "graphviz_dot",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgraph_pnggen.py",
        "pattern": "/^    graphviz_dot = GraphvizOutput(output_file='call_graph.dot')$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "jsonize_code",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/jsonize_codebase.py",
        "pattern": "/^def jsonize_code(folder_paths, output_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "load_and_index_files",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/file_processing.py",
        "pattern": "/^def load_and_index_files(repo_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "load_folder_documents",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/file_processing.py",
        "pattern": "/^def load_folder_documents(folder_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "main",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/main.py",
        "pattern": "/^def main():$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "main",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/main_addcmt.py",
        "pattern": "/^def main():$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "main",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/test_addcomment.py",
        "pattern": "/^def main():$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "model_name",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/config.py",
        "pattern": "/^model_name = \"gpt-4-16k-0314\"/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "parts",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/add_comment_to_function.py",
        "pattern": "/^        parts = line.strip().split('\\\\t')$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "pattern",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/removedocstring.py",
        "pattern": "/^pattern = r'def (\\\\w+)\\\\([^)]*\\\\):\\\\s*\\\\\"\\\\\"\\\\\"[^\\\\\"\\\\\"\\\\\"].*?\\\\\"\\\\\"\\\\\"'$/",
        "language": "Python",
        "kind": "variable"
    },
    {
        "_type": "tag",
        "name": "process_folder",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/removedocstring.py",
        "pattern": "/^def process_folder(folder_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "read_call_hierarchy_json",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/test_addcomment.py",
        "pattern": "/^def read_call_hierarchy_json(json_file):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "remove_docstrings_from_file",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/removedocstring.py",
        "pattern": "/^def remove_docstrings_from_file(file_path):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "search_documents",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/file_processing.py",
        "pattern": "/^def search_documents(query, index, documents, n_results=5):$/",
        "language": "Python",
        "kind": "function"
    },
    {
        "_type": "tag",
        "name": "visit_Call",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^    def visit_Call(self, node):$/",
        "language": "Python",
        "kind": "member",
        "scope": "CallHierarchyVisitor",
        "scopeKind": "class"
    },
    {
        "_type": "tag",
        "name": "visit_FunctionDef",
        "path": "/home/phucsaiyan/Documents/stage/clonechatgpt/callgpraph.py",
        "pattern": "/^    def visit_FunctionDef(self, node):$/",
        "language": "Python",
        "kind": "member",
        "scope": "CallHierarchyVisitor",
        "scopeKind": "class"
    }
]